<project >
    
	<!-- Project Directories -->
    <property name="conf.dir" value="${basedir}/conf"></property>
    <property name="3rdparty.dir" value="/usr/lpp/tools/lib"></property>
    <property name="dbb.dir" value="/usr/lpp/IBM/dbb/lib"></property>
    <property name="dbb-groovy.dir" value="/usr/lpp/IBM/dbb/groovy-2.4.12/lib"></property>
    <loadproperties srcfile="${zJenkins.conf.dir}/GlobalAnt.properties"></loadproperties>
	
    <description>
        Create a Java Project (JAR) with Ant build script
    </description>
	
     <target name="display-properties">
        <echoproperties />
     </target>  
	
    <path id="classpath.zJenkins">      
        <fileset dir="${dbb.groovy.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${dbb.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${zJenkins.lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>
	
    <taskdef name="zJenkins" classpathref="classpath.zJenkins" classname="com.zos.groovy.utilities.ZantBuild"/>
	
    <target name="compile.zOSApps" description="Compile Groovy source">
        <zJenkins message="Hello World! My tasks works!" />
    </target>
    
    <target name="init">
        <tstamp />
        <mkdir dir="${bin.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>

    <target name="compile" depends="compile.zOSApps" description="Compile Java source">
        <javac includeantruntime="false" 
                srcdir="${src.java.dir}" 
                destdir="${bin.dir}" >
        </javac>
    </target>
    
    <target name="jar" depends="compile" description="Create Jar files">
        <jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${bin.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run-main" depends="jar">
        <java jar="${dist.dir}/${ant.project.name}.jar" fork="true"/>
    </target>
    
    <path id="classpath.test">      
        <pathelement location="${3rdparty.dir}/junit-4.12.jar"/>
        <pathelement location="${3rdparty.dir}/hamcrest-core-1.3.jar"/>
        <fileset dir="${dist.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>
    
    <target name="print-classpath" depends="run-main">
        <pathconvert property="classpathInName" refid="classpath.test"></pathconvert>
        <echo> Classpath is ${classpathInName}} </echo>
    </target>
      
    <target name="test-compile" depends="run-main" description="Compile Junit source">
        <javac includeantruntime="false" 
                srcdir="${test.java.dir}" 
                destdir="${bin.dir}" 
                classpathref="classpath.test" > 
        </javac>
    </target>

    <target name="test" depends="test-compile" description="Run Unit Tests">
        <junit printsummary="true" haltonfailure="true">
            <classpath> 
                <path refid="classpath.test" />
                <pathelement location="${bin.dir}"/>
            </classpath>
            <formatter type="xml" />
            <batchtest>
                <fileset dir="${bin.dir}" includes="**/*Test.class" />
            </batchtest>
        </junit>
    </target>
    
   <target name = "deploy" depends = "test" description = "Deploy java application ">
      <mkdir dir="${appDev.lib.dir}" />
      <copy todir = "${appDev.lib.dir}" 
      	 preservelastmodified = "true">
         <fileset dir = "${dist.dir}">
            <include name = "**/*.*"/>
         </fileset>
      </copy>
   </target>

   <target name = "deploy-conf" depends = "deploy" description = "Deploy application conf">
      <mkdir dir="${appDev.conf.dir}" />
      <copy todir = "${appDev.conf.dir}" 
      	 preservelastmodified = "true">
         <fileset dir = "${conf.dir}">
            <include name = "**/*.txt"/>
         </fileset>
      </copy>
   </target>
	
    <target name="deploy-json" depends="deploy-conf">
        <copy todir = "${appDev.conf.dir}" 
        	preservelastmodified = "true">
           <fileset dir = "${basedir}">
              <include name = "**/*.json"/>
           </fileset>
        </copy>
    </target> 
	
    <target name="deploy-zlogs" depends="deploy-json" >
    	<mkdir dir="${appDev.log.dir}" />
        <copy todir = "${appDev.log.dir}" 
        	preservelastmodified = "true">
           <fileset dir = "${basedir}">
              <include name = "**/*.zlog"/>
           </fileset>
        </copy>
    </target>
    
    <target name="deploy-logs" depends="deploy-json" >
        <mkdir dir="${appDev.log.dir}" />
        <copy todir = "${appDev.log.dir}" 
            preservelastmodified = "true">
           <fileset dir = "${basedir}">
              <include name = "**/*.log"/>
           </fileset>
        </copy>
    </target>
	
	<target name="deploy-testCaseResults" depends="deploy-logs, deploy-zlogs">
        <mkdir dir="${appDev.web.dir}" />
        <copy todir = "${appDev.web.dir}" 
        	preservelastmodified = "true">
           <fileset dir = "${basedir}">
              <include name = "**/TEST*.xml"/>
           </fileset>
        </copy>
    </target>
	
    <target name="deploy-web" depends="deploy-testCaseResults">
        <mkdir dir="${appDev.web.dir}" />
        <copy todir = "${appDev.web.dir}" 
        	preservelastmodified = "true">
           <fileset dir = "${basedir}">
              <include name = "**/*.xml"/>
              <include name = "**/*.html"/>
           </fileset>
        </copy>
    </target>
    
    <target name="deploy-webServices" depends="deploy-web">
        <mkdir dir="${appDev.bin.dir}" />
        <copy todir = "${appDev.bin.dir}" 
        	preservelastmodified = "true">
           <fileset dir = "${basedir}">
              <include name = "**/*.wsbind"/>
              <include name = "**/*.wsdl"/>
           </fileset>
        </copy>
    </target>
	
    <target name="deploy-Source" depends="deploy-webServices">
        <mkdir dir="${dist.dir}/source" />
        <copy todir = "${dist.dir}/source" 
        	preservelastmodified = "true" overwrite="true" outputencoding="UTF-8">
           <fileset dir = "${basedir}">
              <include name = "${src.zOS.dir}/**"/>
           </fileset>
        </copy>
    </target>
              	
    <!-- Default, run this -->
    <target name="main" depends="init,compile.zOSApps,compile,jar,test-compile,test,deploy,deploy-conf,deploy-json,deploy-zlogs,deploy-logs,deploy-testCaseResults,deploy-web,deploy-webServices,deploy-Source" />
    
	
</project>